{"version":3,"sources":["webpack:///./src/components/Icon/Icon.js","webpack:///./src/theme/colors.js","webpack:///./src/components/AudioPlayer/AudioButton.js","webpack:///./src/components/AudioPlayer/useAudio.js","webpack:///./src/components/Icon/icons.js"],"names":["Icon","icon","xmlns","width","height","viewBox","d","fill","colors","Button","styled","button","AudioButton","url","audio","useState","Audio","playing","setPlaying","useEffect","play","pause","currentTime","addEventListener","removeEventListener","useAudio","toggle","label","onClick","aria-label"],"mappings":"uIAIaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,yBACIC,MAAM,6BACNC,MAAM,MACNC,OAAO,MACPC,QAAQ,aAER,0BAAMC,EAAGL,EAAMM,KAAK,YCRfC,EAHK,UAGLA,EAFD,UCMNC,EAASC,IAAOC,OAAV,qEAAGD,CAAH,iOAKMF,EAMIA,GAqBPI,UAjBK,SAAC,GAAe,IAAD,ECpBX,SAAAC,GAAQ,IACrBC,EAASC,mBAAS,IAAIC,MAAMH,IADR,KAEGE,oBAAS,GAAhCE,EAFoB,KAEXC,EAFW,KAsB3B,OAhBAC,qBAAU,WAMNF,EAAUH,EAAMM,QAJZN,EAAMO,QACNP,EAAMQ,YAAc,KAIzB,CAACL,IAEJE,qBAAU,WAEN,OADAL,EAAMS,iBAAiB,SAAS,kBAAML,GAAW,MAC1C,WACHJ,EAAMU,oBAAoB,SAAS,kBAAMN,GAAW,SAEzD,IAEI,CAACD,EAlBO,kBAAMC,GAAYD,KDiBPQ,CADK,EAAZX,OACZG,EADwB,KACfS,EADe,KAGzBzB,EAAOgB,EEtBb,4EAFA,0GFyBMU,EAAQV,EAAU,OAAS,OAEjC,OACI,kBAACR,EAAD,CAAQmB,QAASF,EAAQG,aAAYF,GACjC,kBAAC,EAAD,CAAM1B,KAAMA","file":"6-67d5b2e177731f6eb63c.js","sourcesContent":["import React from 'react'\nimport * as icons from './icons'\nimport { oneOf } from 'prop-types'\n\nexport const Icon = ({ icon }) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"60%\"\n        height=\"120\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d={icon} fill=\"white\" />\n    </svg>\n)\n\nIcon.propTypes = {\n    icon: oneOf(Object.values(icons)).isRequired,\n}\n","const redDarker = '#c41e22'\nconst red = '#e71e26'\n\nexport const colors = { redDarker, red }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useAudio } from './useAudio'\nimport { Icon, play, stop } from '../Icon'\nimport { colors } from '../../theme'\nimport { string } from 'prop-types'\n\nconst Button = styled.button`\n    border: none;\n    border-radius: 50%;\n    height: 10rem;\n    width: 10rem;\n    background: ${colors.red};\n    outline: none;\n    box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n        0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n        0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n    &:active {\n        background: ${colors.redDarker};\n    }\n`\n\nconst AudioButton = ({ audio }) => {\n    const [playing, toggle] = useAudio(audio)\n\n    const icon = playing ? stop : play\n    const label = playing ? 'Stop' : 'Play'\n\n    return (\n        <Button onClick={toggle} aria-label={label}>\n            <Icon icon={icon} />\n        </Button>\n    )\n}\n\nAudioButton.propTypes = {\n    audio: string.isRequired,\n}\n\nexport default AudioButton\n","import { useState, useEffect } from 'react'\n\nexport const useAudio = url => {\n    const [audio] = useState(new Audio(url))\n    const [playing, setPlaying] = useState(false)\n\n    const toggle = () => setPlaying(!playing)\n\n    useEffect(() => {\n        const stop = () => {\n            audio.pause()\n            audio.currentTime = 0\n        }\n\n        playing ? audio.play() : stop()\n    }, [playing])\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => setPlaying(false))\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false))\n        }\n    }, [])\n\n    return [playing, toggle]\n}\n","export const play =\n    'M8 6.82v10.36c0 .79.87 1.27 1.54.84l8.14-5.18c.62-.39.62-1.29 0-1.69L9.54 5.98C8.87 5.55 8 6.03 8 6.82z'\nexport const stop =\n    'M8 6h8c1.1 0 2 .9 2 2v8c0 1.1-.9 2-2 2H8c-1.1 0-2-.9-2-2V8c0-1.1.9-2 2-2z'\n"],"sourceRoot":""}